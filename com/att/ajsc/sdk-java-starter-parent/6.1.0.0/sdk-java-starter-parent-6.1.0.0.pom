<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.att.ajsc</groupId>
	<artifactId>sdk-java-starter-parent</artifactId>
	<version>6.1.0.0</version>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.6.RELEASE</version>
	</parent>
	
	<scm>
		<connection>scm:git:ssh://git@codecloud.web.att.com:7999/st_ocnp/sdk-java-starter.git</connection>
		<developerConnection>scm:git:ssh://git@codecloud.web.att.com:7999/st_ocnp/sdk-java-starter.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<repository>
			<id>nexus</id>
			<name>att-repository-releases</name>
			<url>http://mavencentral.it.att.com:8084/nexus/content/repositories/att-repository-releases</url>
		</repository>
		<snapshotRepository>
			<id>nexus</id>
			<name>att-repository-snapshots</name>
			<url>http://mavencentral.it.att.com:8084/nexus/content/repositories/att-repository-snapshots</url>
		</snapshotRepository>
	</distributionManagement>


	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.group>localhost:5000</docker.group>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.9</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/docker</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/kubernetes</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/doxygen</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<!-- <plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>copy-resources-step</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								this is important
								<overwrite>true</overwrite>
								target
								<outputDirectory>target/generated-sources/gateway</outputDirectory>
								<resources>
									<resource>
										source
										<directory>src/main/gateway</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.apigee.build-tools.enterprise4g</groupId>
					<artifactId>proxy-dependency-maven-plugin</artifactId>
					<version>2.0.0</version>
					<executions>
						<execution>
							<phase>prepare-package</phase>
							<goals>
								<goal>resolve</goal>
							</goals>
							<configuration>
								<proxySrcDir>target/generated-sources/gateway/proxy-app</proxySrcDir>
								<proxyDestDir>target/generated-sources/gateway/proxy-app/target</proxyDestDir>
								<proxyRefs>
									<proxyRef>target/generated-sources/gateway/CommonProxy</proxyRef>
								</proxyRefs>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>io.apigee.build-tools.enterprise4g</groupId>
					<artifactId>apigee-edge-maven-plugin</artifactId>
					<version>1.0.0</version>
					<configuration>
						<baseDirectory>target/generated-sources/gateway/proxy-app</baseDirectory>
						<buildDirectory>target/generated-sources/gateway/proxy-app/target</buildDirectory>
					</configuration>
					<executions>
						<execution>
							<id>configure-bundle-step</id>
							<phase>package</phase>
							<goals>
								<goal>configure</goal>
							</goals>
						</execution>
					</executions>
				</plugin> -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.kongchen</groupId>
										<artifactId>swagger-maven-plugin</artifactId>
										<versionRange>3.1.3</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- <plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copyappagent</id>
							<phase>package</phase>
							<goals>
								<goal>copy</goal>
							</goals>
							<configuration>
								<outputDirectory>target/classes</outputDirectory>
								<encoding>UTF-8</encoding>
								<artifactItems>
									<artifactItem>
										<groupId>appdynamics</groupId>
										<artifactId>appagent</artifactId>
										<version>1.0</version>
										<type>zip</type>
									</artifactItem>
								</artifactItems>
							</configuration>
						</execution>
						<execution>
							<id>copy</id>
							<phase>package</phase>
							<goals>
								<goal>copy</goal>
							</goals>
							<configuration>
								<outputDirectory>target/classes</outputDirectory>
								<encoding>UTF-8</encoding>
								<artifactItems>
									<artifactItem>
										<groupId>appdynamics</groupId>
										<artifactId>machineagent</artifactId>
										<version>1.0</version>
										<type>zip</type>
									</artifactItem>
								</artifactItems>
							</configuration>
						</execution>
					</executions>
				</plugin> -->
				<plugin>
					<groupId>com.github.kongchen</groupId>
					<artifactId>swagger-maven-plugin</artifactId>
					<version>3.1.3</version>
					<configuration>
						<apiSources>
							<apiSource>
								<locations>${icd.package}</locations>
								<basePath>/</basePath>
								<info>
									<title>${project.artifactId} Service</title>
									<version>${project.version}</version>
								</info>
								<swaggerDirectory>${swagger.directory}</swaggerDirectory>
							</apiSource>
						</apiSources>
					</configuration>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<destFile>${project.build.directory}/jacoco-it.exec</destFile>
						<excludes>
							<exclude>**/**/models/**/*.class</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- <plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.4.10</version>
					<configuration>
						<imageName>${docker.registry}$/${project.artifactId}</imageName>
						<dockerDirectory>target/classes</dockerDirectory>
						<imageTags>
							<imageTag>${project.version}-${build.number}</imageTag>
							<imageTag>latest</imageTag>
						</imageTags>
						<forceTags>true</forceTags>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin> -->
				<!-- <plugin>
					<artifactId>exec-maven-plugin</artifactId>
					<groupId>org.codehaus.mojo</groupId>
					<version>1.4.0</version>
					<executions>
						<execution>
							<id>1-build-doxygen</id>
							<phase>compile</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>doxygen</executable>
								<workingDirectory>${basedir}</workingDirectory>
								<arguments>
									<argument>${doxygen.doxyfile}</argument>
								</arguments>
								<environmentVariables>
									<ARTIFACTID>${project.artifactId}</ARTIFACTID>
									<VERSION>${project.version}</VERSION>
									<DESCRIPTION>${project.description}</DESCRIPTION>
									<SOURCE>${basedir}</SOURCE>
									<TARGET>${doxygen.directory}</TARGET>
								</environmentVariables>
								<skip>${doxygen.skip}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin> -->
				<plugin>
					<groupId>com.att.eg.monitoring</groupId>
					<artifactId>yawl-maven-plugin</artifactId>
					<version>1.0.1</version>
					<configuration>
						<classes>${basedir}/target/classes</classes>
						<resource>${basedir}/target/classes/logmessages.properties</resource>
						<statusCodesExclusions>
							<param>com.att.eg.monitoring.tracing</param>
						</statusCodesExclusions>
						<statusCodesInclusions>
							<param>com.att.eg.monitoring</param>
						</statusCodesInclusions>
					</configuration>
					<executions>
						<execution>
							<id>test-exec</id>
							<phase>test-compile</phase>
							<goals>
								<goal>extract</goal>
							</goals>
						</execution>
						<execution>
							<id>package-exec</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>extract</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.scm</groupId>
						<artifactId>maven-scm-provider-gitexe</artifactId>
						<version>1.9</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
			</plugin>
		</plugins>
	</build>
</project>
